"""
Autogenerated input type of AcceptRevision
"""
input AcceptRevisionInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  comment: String
  id: Int!
  organizationId: Int
}

"""
Autogenerated return type of AcceptRevision
"""
type AcceptRevisionPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  revision: Revision!
  supersededRevisions: [Revision!]!
}

"""
Autogenerated input type of AddComment
"""
input AddCommentInput {
  body: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  organizationId: Int
  subject: CommentableInput!
  title: String
}

"""
Autogenerated return type of AddComment
"""
type AddCommentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  comment: Comment
}

type AdvancedSearchResult {
  permalinkId: String
  resultIds: [Int!]!
  searchEndpoint: String!
}

enum BooleanOperator {
  AND
  OR
}

input BooleanSearchInput {
  value: Boolean!
}

type BrowseGene {
  aliases: [GeneAlias!]
  assertionCount: Int!
  description: String!
  diseases: [Disease!]
  drugs: [Drug!]
  entrezId: Int!
  evidenceItemCount: Int!
  id: Int!
  name: String!
  variantCount: Int!
}

"""
The connection type for BrowseGene.
"""
type BrowseGeneConnection {
  """
  A list of edges.
  """
  edges: [BrowseGeneEdge]

  """
  A list of nodes.
  """
  nodes: [BrowseGene]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type BrowseGeneEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: BrowseGene
}

type ClinicalTrial {
  description: String!
  id: Int!
  name: String!
  nctId: String!
}

type Comment {
  comment: String!
  id: Int!
  title: String
}

enum CommentableEntities {
  GENE
}

"""
Entity to comment on
"""
input CommentableInput {
  entityType: CommentableEntities!
  id: Int!
}

type Disease {
  name: String!
}

type Drug {
  name: String!
}

type Event {
  createdAt: ISO8601DateTime!
  id: Int!
  organization: Organization!
  originatingUser: User!
}

type EvidenceItem {
  description: String!
  id: Int!
  variant: Variant!
}

type Flag {
  id: Int!
}

"""
Autogenerated input type of FlagEntity
"""
input FlagEntityInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  comment: String!
  organizationId: Int
  subject: FlaggableInput!
}

"""
Autogenerated return type of FlagEntity
"""
type FlagEntityPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  flag: Flag
}

enum FlaggableEntities {
  GENE
}

"""
Entity to flag
"""
input FlaggableInput {
  entityType: FlaggableEntities!
  id: Int!
}

type Gene {
  aliases: [GeneAlias!]
  description: String!
  entrezId: Int!
  id: Int!
  lifecycleActions: Lifecycle!
  myGeneInfoDetails: JSON
  name: String!
  officialName: String!
  revisions(fieldName: String, first: Int = 5, revisionsetId: String, status: RevisionStatus): [Revision!]!
  sources: [Source!]
  variants: [Variant!]
}

type GeneAlias {
  name: String!
}

input GeneFields {
  description: String!
  sourceIds: [Int!]!
}

input GeneSearchFilter {
  alias: StringSearchInput
  booleanOperator: BooleanOperator
  description: StringSearchInput
  entrezId: IntSearchInput
  entrezSymbol: StringSearchInput
  hasAssertion: BooleanSearchInput
  id: IntSearchInput
  openRevisionCount: IntSearchInput
  subFilters: [GeneSearchFilter!]
}

input GenesSort {
  """
  Available columns for sorting
  """
  column: GenesSortColumns!

  """
  Sort direction
  """
  direction: SortDirection!
}

enum GenesSortColumns {
  assertionCount
  diseaseName
  drugName
  entrezSymbol
  evidenceItemCount
  geneAlias
  variantCount
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

input IntSearchInput {
  comparisonOperator: IntSearchOperator!
  value: Int!
}

enum IntSearchOperator {
  """
  Equal To
  """
  EQ
  GE
  GT
  LE
  LT
  NE
}

"""
Represents untyped JSON
"""
scalar JSON

type Lifecycle {
  lastCommentedOn: Event
  lastModified: Event
  lastReviewed: Event
}

type LinkoutData {
  currentValue: ModeratedField!
  name: String!
  suggestedValue: ModeratedField!
}

"""
Fields that can have revisions can be either scalar values or complex objects
"""
union ModeratedField = ObjectField | ScalarField

type ModeratedObjectField {
  displayName: String!
  displayType: String!
  entityType: String!
  id: Int!
}

type Mutation {
  acceptRevision(
    """
    Parameters for AcceptRevision
    """
    input: AcceptRevisionInput!
  ): AcceptRevisionPayload
  addComment(
    """
    Parameters for AddComment
    """
    input: AddCommentInput!
  ): AddCommentPayload
  flagEntity(
    """
    Parameters for FlagEntity
    """
    input: FlagEntityInput!
  ): FlagEntityPayload
  rejectRevision(
    """
    Parameters for RejectRevision
    """
    input: RejectRevisionInput!
  ): RejectRevisionPayload
  suggestGeneRevision(
    """
    Parameters for SuggestGeneRevision
    """
    input: SuggestGeneRevisionInput!
  ): SuggestGeneRevisionPayload
}

type ObjectField {
  objects: [ModeratedObjectField!]!
}

type Organization {
  description: String!
  id: Int!
  name: String!
  url: String!
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

type Query {
  browseGenes(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    diseaseName: String
    drugName: String
    entrezSymbol: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int
    geneAlias: String

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    sortBy: GenesSort
  ): BrowseGeneConnection!

  """
  Find a gene by CIViC ID
  """
  gene(id: ID!): Gene
  searchByPermalink(permalinkId: String!): AdvancedSearchResult!
  searchGenes(createPermalink: Boolean = false, query: GeneSearchFilter!): AdvancedSearchResult!
}

"""
Autogenerated input type of RejectRevision
"""
input RejectRevisionInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  comment: String!
  id: Int!
  organizationId: Int
}

"""
Autogenerated return type of RejectRevision
"""
type RejectRevisionPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  revision: Revision!
}

type Revision {
  comments: [Comment!]!
  createdAt: ISO8601DateTime!
  currentValue: JSON!
  fieldName: String!
  id: Int!
  linkoutData: LinkoutData!
  revisionsetId: String!
  status: RevisionStatus!
  suggestedValue: JSON!
  updatedAt: ISO8601DateTime!
}

type RevisionResult {
  fieldName: String!
  id: Int!
  newlyCreated: Boolean!
  revisionsetId: String!
}

enum RevisionStatus {
  accepted
  new
  rejected
  superseded
}

type ScalarField {
  value: String
}

enum SortDirection {
  ASC
  DESC
}

type Source {
  ascoAbstractId: Int
  citation: String!
  clinicalTrials: [ClinicalTrial!]
  fullJournalTitle: String!
  id: Int!
  journal: String!
  name: String!
  publicationDay: Int
  publicationMonth: Int!
  publicationYear: Int!
  sourceType: SourceSource!
  sourceUrl: String!
  status: SourceStatus!
}

enum SourceSource {
  ASCO
  PubMed
}

enum SourceStatus {
  FullyCurated
  PartiallyCurated
  Submitted
}

input StringSearchInput {
  comparisonOperator: StringSearchOperator!
  value: String!
}

enum StringSearchOperator {
  CONTAINS
  DOES_NOT_CONTAIN
  EQ
  NE
  STARTS_WITH
}

"""
Autogenerated input type of SuggestGeneRevision
"""
input SuggestGeneRevisionInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  comment: String!
  fields: GeneFields!
  id: Int!
  organizationId: Int
}

"""
Autogenerated return type of SuggestGeneRevision
"""
type SuggestGeneRevisionPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  gene: Gene!
  results: [RevisionResult!]!
}

type User {
  bio: String
  country: String
  email: String
  id: Int!
  name: String!
  organizations: [Organization!]
  role: String!
  url: String
  username: String!
}

type Variant {
  description: String!
  evidenceItems: [EvidenceItem!]
  gene: Gene!
  id: Int!
  name: String!
}