# collect & merge model types
schema: ./src/app/generated/server.model.graphql
# collect & merge client queries, mutations, fragments
documents: ./src/**/*.gql
extensions:
  codegen:
    config:
      overwrite: true
      # app.module, relative to generated civic.apollo.ts
      # ngModule: ../app.module#AppModule
      serviceProvidedInRoot: true
    generates:
      # generate apollo-angular client service
      ./src/app/generated/civic.apollo.ts:
        plugins:
          - typescript
          - typescript-operations
          - typescript-apollo-angular
          - add:
              content: /* eslint-disable */
        config:
          apolloClientVersion: 3
          nonOptionalTypename: true
          futureProofUnions: false
          futureProofEnums: false
          maybeValue: T | undefined
      ./src/app/generated/server.possible-types.ts:
        plugins:
          - fragment-matcher
        config:
          apolloClientVersion: 2
      ./src/app/generated/server.field-policies.ts:
        plugins:
          - typescript-apollo-client-helpers
        config:
          useTypeImports: true
