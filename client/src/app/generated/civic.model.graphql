"""
Autogenerated input type of AddComment
"""
input AddCommentInput {
  body: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  organizationId: Int
  subject: CommentableInput!
  title: String
}

"""
Autogenerated return type of AddComment
"""
type AddCommentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  comment: Comment
}

type BrowseGene {
  assertionCount: Int!
  description: String!
  diseases: [Disease!]
  drugs: [Drug!]
  entrezId: Int!
  evidenceItemCount: Int!
  geneAliases: [GeneAlias!]
  id: Int!
  name: String!
  variantCount: Int!
}

"""
The connection type for BrowseGene.
"""
type BrowseGeneConnection {
  """
  A list of edges.
  """
  edges: [BrowseGeneEdge]

  """
  A list of nodes.
  """
  nodes: [BrowseGene]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type BrowseGeneEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: BrowseGene
}

type ClinicalTrial {
  description: String!
  id: Int!
  name: String!
  nctId: String!
}

type Comment {
  comment: String!
  id: Int!
  title: String
}

enum CommentableEntities {
  GENE
}

"""
Entity to comment on
"""
input CommentableInput {
  entityType: CommentableEntities!
  id: Int!
}

type Disease {
  name: String!
}

type Drug {
  name: String!
}

type Event {
  createdAt: ISO8601DateTime!
  id: Int!
  organization: Organization!
  originatingUser: User!
}

type EvidenceItem {
  description: String!
  id: Int!
  variant: Variant!
}

type Gene {
  description: String!
  entrezId: Int!
  geneAliases: [GeneAlias!]
  id: Int!
  lifecycleActions: Lifecycle!
  name: String!
  officialName: String!
  sources: [Source!]
  variants: [Variant!]
}

type GeneAlias {
  name: String!
}

input GenesSort {
  """
  Available columns for sorting
  """
  column: GenesSortColumns!

  """
  Sort direction
  """
  direction: SortDirection!
}

enum GenesSortColumns {
  diseaseName
  drugName
  entrezSymbol
  geneAlias
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

type Lifecycle {
  lastCommentedOn: Event
  lastModified: Event
  lastReviewed: Event
}

type Mutation {
  addComment(
    """
    Parameters for AddComment
    """
    input: AddCommentInput!
  ): AddCommentPayload
}

type Organization {
  description: String!
  id: Int!
  name: String!
  url: String!
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

type Query {
  browseGenes(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    diseaseName: String
    drugName: String
    entrezSymbol: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int
    geneAlias: String

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    sortBy: GenesSort
  ): BrowseGeneConnection!

  """
  Find a gene by CIViC ID
  """
  gene(id: ID!): Gene
}

enum SortDirection {
  ASC
  DESC
}

type Source {
  ascoAbstractId: Int
  citation: String!
  clinicalTrials: [ClinicalTrial!]
  fullJournalTitle: String!
  id: Int!
  journal: String!
  name: String!
  publicationDay: Int
  publicationMonth: Int!
  publicationYear: Int!
  sourceType: SourceSource!
  sourceUrl: String!
  status: SourceStatus!
}

enum SourceSource {
  ASCO
  PubMed
}

enum SourceStatus {
  FullyCurated
  PartiallyCurated
  Submitted
}

type User {
  bio: String
  country: String
  email: String
  id: Int!
  name: String!
  organizations: [Organization!]
  role: String!
  url: String
  username: String!
}

type Variant {
  description: String!
  evidenceItems: [EvidenceItem!]
  gene: Gene!
  id: Int!
  name: String!
}