type Gene {
  id: Int!
  type: EntityType
  name: String!
  entrezId: Int!
  aliases: [String]
  lifecycleActions: [LifecycleAction]
  variants: [Variant]
}

type Variant {
  id: Int!
  type: EntityType
  name: String!
  aliases: [String]
  lifecycleActions: [LifecycleAction!]!
  evidence: [Evidence]
}

type VariantGroup {
  id: Int!
  type: EntityType
  name: String!
  lifecycleActions: [LifecycleAction!]!
  variants: [Variant]!
}

type Evidence {
  id: Int!
  type: EntityType
  name: String!
  summary: String!
  description: String
  disease: [Disease]
  rating: Int!
  evidenceLevel: String!
  evidenceType: EvidenceType!
  evidenceDirection: String!
  variantOrigin: String!
  drugInteractionType: String
  status: String!
  openChangeCount: Int!
}

type Assertion {
  id: Int!
  type: EntityType
  name: String!
  summary: String!
  description: String
  evidence: [Evidence]
  disease: [Disease]
  rating: Int!
  evidenceLevel: String!
  assertionType: AssertionType!
  evidenceDirection: String!
  variantOrigin: String!
  drugInteractionType: String
  status: String!
  openChangeCount: Int!
}

type Disease {
  id: Int!
  name: String!
  displayName: String!
  doid: Int!
  url: String
}

enum EvidenceType {
  DIAGNOSTIC
  FUNCTIONAL
  PREDICTIVE
  PREDISPOSING
  PROGNOSTIC
}

enum AssertionType {
  DIAGNOSTIC
  PREDICTIVE
  PREDISPOSING
  PROGNOSTIC
}
enum EntityType {
  EVIDENCE
  GENE
  SOURCE
  VARIANT
  VARIANT_GROUP
}

type LifecycleAction {
  id: Int!
  type: LifecycleType!
  timestamp: String!
  user: User
  organization: Organization
}

enum LifecycleType {
  ACCEPTED
  LAST_MODIFIED
  LAST_REVIEWED
  REJECTED
}

type User {
  id: Int!,
  displayName: String!
  username: String!
  email: String
  comments: [Comment]
}

type Comment {
  id: Int!
  title: String
  text: String!
}

type Organization {
  id: Int!
  name: String!
  url: String!
  description: String!
  parent: Organization
}

type Query {
  allEvidence: [Evidence]!
  allGenes: [Gene]!
  allVariants: [Variant!]!
  allUsers: [User]!
  allAssertions: [Assertion]!
  allVariantGroups: [VariantGroup]!
}

schema {
  query: Query
}
